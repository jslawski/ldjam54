// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel CSInit

Texture2D<float4>  InputImage;
SamplerState _LinearClamp;

RWStructuredBuffer<float> ResultBuffer;

[numthreads(1, 1, 1)]
void CSInit(uint3 id : SV_DispatchThreadID)
{
	ResultBuffer[0] = 0;
	ResultBuffer[1] = 0;
	ResultBuffer[2] = 0;
	ResultBuffer[3] = 0;
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	float w, h;
	InputImage.GetDimensions(w, h);
	float u = id.x / w;
	float v = id.y / h;
	float2 uv = float2(u, v);
	float4 color = InputImage.SampleLevel(_LinearClamp, uv, 0);
	
	if (color.r > 0.0f && color.g > 0.0f && color.b > 0.0f && color.a > 0.0f)
	{
		ResultBuffer[0] = color.r;
		ResultBuffer[1] = color.g;
		ResultBuffer[2] = color.b;
		ResultBuffer[3] = color.a;
	}
}